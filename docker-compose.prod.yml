version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: kost_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./kost-backend/database/backup:/backup
    # Remove external port exposure for security in production
    # ports:
    #   - "3306:3306"
    networks:
      - kost_network
    command: --default-authentication-plugin=mysql_native_password

  # Redis - DISABLED (using file-based cache and sessions)
  # redis:
  #   image: redis:7-alpine
  #   container_name: kost_redis
  #   restart: unless-stopped
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - kost_network
  #   command: redis-server --appendonly yes

  # Laravel Backend
  backend:
    build:
      context: ./kost-backend
      dockerfile: Dockerfile
    container_name: kost_backend
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - QUEUE_CONNECTION=database
      - SESSION_DRIVER=file
      - CACHE_STORE=file
      - BROADCAST_CONNECTION=log
    volumes:
      - backend_storage:/var/www/html/storage
      - backend_logs:/var/www/html/storage/logs
    networks:
      - kost_network
    # Remove Traefik labels as we're using Nginx
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.backend.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
    #   - "traefik.http.services.backend.loadbalancer.server.port=80"

  # React Frontend
  frontend:
    build:
      context: ./kost-frontend
      dockerfile: Dockerfile
    container_name: kost_frontend
    restart: unless-stopped
    networks:
      - kost_network
    # Remove Traefik labels as we're using Nginx
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)"
    #   - "traefik.http.services.frontend.loadbalancer.server.port=80"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: kost_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - kost_network

  # MQTT Broker (Eclipse Mosquitto)
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: kost_mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/logs:/mosquitto/log
    networks:
      - kost_network

volumes:
  mysql_data:
    driver: local
  # redis_data:  # Disabled Redis
  #   driver: local
  backend_storage:
    driver: local
  backend_logs:
    driver: local

networks:
  kost_network:
    driver: bridge